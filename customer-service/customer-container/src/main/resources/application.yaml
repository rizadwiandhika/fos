server:
  port: 8184

logging:
  level:
    com.food.ordering.system: DEBUG

customer-service:
  customer-topic-name: customer

  # Every 10 seconds, pull the outbox table and send the messages to the Kafka topic
  # In production, this should be set to a smaller value, ideally < 2 second
  outbox-scheduler-fixed-rate: 10000
  outbox-scheduler-initial-delay: 10000

spring:
  sql:
    init:
      mode: ALWAYS
      schema-locations: classpath:init-schema.sql
      platform: postgres
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=customer&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
    # platform: postgres
    # schema: classpath:init-schema.sql
    # initialization-mode: always

kafka-config:
  bootstrap-servers: 127.0.0.1:19092,127.0.0.1:29092,127.0.0.1:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://127.0.0.1:8081
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5
